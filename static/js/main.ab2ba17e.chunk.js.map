{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/Home/index.js","components/Profile/index.js","components/FiltersGroup/index.js","components/JobCard/index.js","components/AllJobs/index.js","components/Job/index.js","components/NotFound/index.js","components/SimilarJobCard/index.js","components/JobDetails/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["Login","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","username","password","showErrorMessage","errorMessage","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onSubmitFailure","errorMes","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","userDetails","options","response","data","wrap","_context","prev","next","preventDefault","method","body","JSON","stringify","fetch","sent","json","ok","jwt_token","error_msg","stop","_x","apply","_inherits","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","className","children","_jsxs","src","alt","onSubmit","htmlFor","onChange","id","type","Component","withRouter","Link","onClick","remove","Home","Header","apiStatusConstants","console","log","Profile","profileData","apiStatus","clickRetyButton","getProfileDetails","updatedData","headers","Authorization","name","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","renderLoadingView","Loader","color","height","width","renderFailureView","renderSuccessView","FiltersGroup","updateSalaryRange","updateEmploymentType","salaryRangesList","employmentTypesList","onChangeSalary","onChangeEmployementType","employmentTypeId","isChecked","checked","_Fragment","map","each","label","salaryRangeId","JobCard","jobDetails","companyLogoUrl","employmentType","jobDescription","location","packagePerAnnum","rating","title","FaStar","MdLocationOn","BsBriefcaseFill","AllJobs","jobDetailsList","searchInput","getJobDetails","_this$props","selectedEmploymentType","selectedSalaryRange","employmentTypeString","url","jobData","updatedJobData","join","jobs","company_logo_url","employment_type","job_description","package_per_annum","onChangeInput","onClickButton","prevProps","_this$props2","renderContainer","BsSearch","Job","_toConsumableArray","filter","NotFound","SimilarJobs","similarjobDetails","JobDetails","similarJobs","skills","match","params","similarJobsdata","updatedSimilarJobs","jobSkills","updatedSkills","job_details","companyWebsiteUrl","company_website_url","description","life_at_company","imageUrl","image_url","similar_jobs","renderSkillsContainer","skillProps","renderSuccessContainer","href","rel","RiShareBoxFill","renderLoadingContainer","renderFailureContainer","ProtectedRoute","Route","_objectSpread","App","Switch","exact","component","render","ReactDOM","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.ab2ba17e.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    showErrorMessage: false,\n    errorMessage: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 360,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMes => {\n    this.setState({showErrorMessage: true, errorMessage: errorMes})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const url = 'https://apis.ccbp.in/login'\n    const userDetails = {username, password}\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  render() {\n    const {username, password, showErrorMessage, errorMessage} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-bg-container\">\n        <div className=\"login-card-container\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"wesite-logo\"\n          />\n          <form onSubmit={this.submitForm} className=\"from-container\">\n            <div className=\"input-container\">\n              <label className=\"label-text\" htmlFor=\"username\">\n                USERNAME\n              </label>\n              <input\n                onChange={this.onChangeUsername}\n                className=\"input\"\n                id=\"username\"\n                type=\"text\"\n                value={username}\n              />\n            </div>\n            <div className=\"input-container\">\n              <label className=\"label-text\" htmlFor=\"password\">\n                PASSWORD\n              </label>\n              <input\n                onChange={this.onChangePassword}\n                value={password}\n                id=\"password\"\n                className=\"input\"\n                type=\"password\"\n              />\n            </div>\n            <button type=\"submit\" className=\"login-button\">\n              Login\n            </button>\n            {showErrorMessage ? (\n              <p className=\"error-mes\">*{errorMessage}</p>\n            ) : (\n              ''\n            )}\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst Header = props => {\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    const {history} = props\n    history.replace('/login')\n  }\n  return (\n    <div className=\"header-bg-container\">\n      <div className=\"header-image-container\">\n        <Link to=\"/\" className=\"link-text\" data-testid=\"homeLink\">\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n            className=\"header-wesite-logo\"\n          />\n        </Link>\n      </div>\n      <ul className=\"list-container\">\n        <li className=\"list-text\">\n          <Link to=\"/\" className=\"link-text\" data-testid=\"homeLink\">\n            Home\n          </Link>\n        </li>\n\n        <li className=\"list-text\">\n          <Link to=\"/jobs\" className=\"link-text\" data-testid=\"jobsLink\">\n            Jobs\n          </Link>\n        </li>\n        <li className=\"logOut-btn-conatiner\">\n          <button\n            className=\"logout-button\"\n            type=\"button\"\n            onClick={onClickLogout}\n            data-testid=\"logoutButton\"\n          >\n            Logout\n          </button>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport Header from '../Header'\nimport './index.css'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"home-bg-container\">\n          <div className=\"text-container\">\n            <h1 className=\"main-heading\">Find The Job That Fits Your Life</h1>\n            <p className=\"description\">\n              Millions of people are searching for jobs, salary information,\n              company reviews. Find the job that fits your abilities and\n              potential.\n            </p>\n            <Link to=\"/jobs\" className=\"link-text\">\n              <button type=\"button\" className=\"home-button\">\n                Find Jobs\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\nconsole.log()\nclass Profile extends Component {\n  state = {\n    profileData: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getProfileDetails()\n  }\n\n  clickRetyButton = () => {\n    this.getProfileDetails()\n  }\n\n  getProfileDetails = async () => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const url = 'https://apis.ccbp.in/profile'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = {\n        name: data.profile_details.name,\n        profileImageUrl: data.profile_details.profile_image_url,\n        shortBio: data.profile_details.short_bio,\n      }\n      this.setState({\n        profileData: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"profile-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"retry-btn-container\">\n      <button\n        type=\"button\"\n        className=\"retry-btn\"\n        onClick={this.clickRetyButton}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {profileData} = this.state\n    const {name, profileImageUrl, shortBio} = profileData\n    return (\n      <div className=\"profile-container\">\n        <img className=\"profile-img\" src={profileImageUrl} alt=\"profile\" />\n        <h1 className=\"profile-name\">{name}</h1>\n        <p className=\"profile-role\">{shortBio}</p>\n      </div>\n    )\n  }\n\n  render() {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      default:\n        return null\n    }\n  }\n}\n\nexport default Profile\n","import './index.css'\n\nconst FiltersGroup = props => {\n  const {\n    updateSalaryRange,\n    updateEmploymentType,\n    salaryRangesList,\n    employmentTypesList,\n  } = props\n\n  const onChangeSalary = event => {\n    updateSalaryRange(event.target.id)\n  }\n\n  const onChangeEmployementType = event => {\n    const employmentTypeId = event.target.value\n    const isChecked = event.target.checked\n    updateEmploymentType(employmentTypeId, isChecked)\n  }\n\n  const renderSalaryListType = () => {\n    console.log(salaryRangesList)\n    return salaryRangesList.map(each => (\n      <li key={each.salaryRangeId} className=\"list-item\">\n        <input\n          type=\"radio\"\n          name=\"salary\"\n          value={each.salaryRangeId}\n          id={each.salaryRangeId}\n          onChange={onChangeSalary}\n        />\n        <label htmlFor={each.salaryRangeId} className=\"filter-text\">\n          {each.label}\n        </label>\n      </li>\n    ))\n  }\n\n  const renderSalaryContainer = () => (\n    <>\n      <h1 className=\"list-heading\">Salary Range</h1>\n      <ul className=\"filter-list-container\">{renderSalaryListType()}</ul>\n    </>\n  )\n\n  const renderEmploymentListType = () => {\n    console.log(employmentTypesList)\n    return employmentTypesList.map(each => (\n      <li key={each.employmentTypeId} className=\"list-item\">\n        <input\n          type=\"checkbox\"\n          id={each.employmentTypeId}\n          value={each.employmentTypeId}\n          onChange={onChangeEmployementType}\n        />\n        <label htmlFor={each.employmentTypeId} className=\"filter-text\">\n          {each.label}\n        </label>\n      </li>\n    ))\n  }\n\n  const renderEmployemntContainer = () => (\n    <>\n      <h1 className=\"list-heading\">Type of Employment</h1>\n      <ul className=\"filter-list-container\">{renderEmploymentListType()}</ul>\n    </>\n  )\n\n  return (\n    <div className=\"filter-group-container\">\n      {renderEmployemntContainer()}\n      <hr className=\"hr-line\" />\n      {renderSalaryContainer()}\n    </div>\n  )\n}\nexport default FiltersGroup\n","import {Link} from 'react-router-dom'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {FaStar} from 'react-icons/fa'\nimport {MdLocationOn} from 'react-icons/md'\n\nimport {Component} from 'react'\n\nimport './index.css'\n\nclass JobCard extends Component {\n  render() {\n    const {jobDetails} = this.props\n    const {\n      companyLogoUrl,\n      employmentType,\n      jobDescription,\n      location,\n      packagePerAnnum,\n      rating,\n      title,\n      id,\n    } = jobDetails\n    return (\n      <li className=\"job-card\">\n        <Link to={`/jobs/${id}`} className=\"link-text\">\n          <div className=\"job-title-container\">\n            <img className=\"job-logo\" src={companyLogoUrl} alt=\"company logo\" />\n            <div className=\"job-title-rating-container\">\n              <h1 className=\"job-title\">{title}</h1>\n              <div className=\"job-rating-container\">\n                <FaStar className=\"star-icon\" />\n                <p className=\"job-rating\">{rating}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"job-short-bio-container\">\n            <div className=\"job-location-container\">\n              <div className=\"job-short-bio-icon-container\">\n                <MdLocationOn className=\"job-icon\" />\n                <p className=\"location\">{location}</p>\n              </div>\n              <div className=\"job-short-bio-icon-container\">\n                <BsBriefcaseFill className=\"job-icon\" />\n                <p className=\"employment-type\">{employmentType}</p>\n              </div>\n            </div>\n            <p className=\"pakage\">{packagePerAnnum}</p>\n          </div>\n          <hr className=\"job-card-hr-line\" />\n          <div>\n            <h1 className=\"job-card-decription-heading\">Description</h1>\n            <p className=\"job-card-decription\">{jobDescription}</p>\n          </div>\n        </Link>\n      </li>\n    )\n  }\n}\n\nexport default JobCard\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {BsSearch} from 'react-icons/bs'\nimport Loader from 'react-loader-spinner'\n\nimport JobCard from '../JobCard'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass AllJobs extends Component {\n  state = {\n    jobDetailsList: [],\n    apiStatus: apiStatusConstants.initial,\n    searchInput: '',\n  }\n\n  componentDidMount() {\n    this.getJobDetails()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {selectedEmploymentType, selectedSalaryRange} = this.props\n    if (\n      prevProps.selectedEmploymentType !== selectedEmploymentType ||\n      prevProps.selectedSalaryRange !== selectedSalaryRange\n    ) {\n      console.log('Props changed. Fetching new job list...')\n      this.getJobDetails()\n    }\n  }\n\n  clickRetyButton = () => {\n    this.getJobDetails()\n  }\n\n  getJobDetails = async () => {\n    const {selectedEmploymentType, selectedSalaryRange} = this.props\n    const {searchInput} = this.state\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const employmentTypeString = selectedEmploymentType.join(',')\n    const url = `https://apis.ccbp.in/jobs?employment_type=${employmentTypeString}&minimum_package=${selectedSalaryRange}&search=${searchInput}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const jobData = await response.json()\n      const updatedJobData = jobData.jobs.map(each => ({\n        id: each.id,\n        companyLogoUrl: each.company_logo_url,\n        employmentType: each.employment_type,\n        jobDescription: each.job_description,\n        location: each.location,\n        packagePerAnnum: each.package_per_annum,\n        rating: each.rating,\n        title: each.title,\n      }))\n      this.setState({\n        jobDetailsList: updatedJobData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  onChangeInput = event => {\n    this.setState({searchInput: event.target.value})\n  }\n\n  onClickButton = () => {\n    this.getJobDetails()\n  }\n\n  renderLoadingView = () => (\n    <div className=\"allJobs-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderSuccessView = () => {\n    const {jobDetailsList} = this.state\n    const showJobList = jobDetailsList.length > 0\n    return showJobList ? (\n      <ul className=\"all-jobList-container\">\n        {jobDetailsList.map(each => (\n          <JobCard key={each.id} jobDetails={each} />\n        ))}\n      </ul>\n    ) : (\n      <div className=\"noJobs-container\">\n        <img\n          className=\"noJobs-img\"\n          src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n          alt=\"no jobs\"\n        />\n        <h1 className=\"noJobs-heading\">No Jobs Found</h1>\n        <p className=\"noJobs-note\">\n          We could not find any jobs. Try other filters\n        </p>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-view-img\"\n      />\n      <h1 className=\"failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"failure-description\">\n        We cannot seem to find the page you are looking for\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-btn\"\n        onClick={this.clickRetyButton}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  render() {\n    const {apiStatus, searchInput} = this.state\n    let renderContainer\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        renderContainer = this.renderSuccessView()\n        break\n      case apiStatusConstants.inProgress:\n        renderContainer = this.renderLoadingView()\n        break\n      case apiStatusConstants.failure:\n        renderContainer = this.renderFailureView()\n        break\n      default:\n        renderContainer = null\n    }\n    return (\n      <div className=\"all-jobs-container\">\n        <div className=\"search-container\">\n          <input\n            type=\"search\"\n            className=\"search-input\"\n            onChange={this.onChangeInput}\n            value={searchInput}\n          />\n          <button\n            data-testid=\"searchButton\"\n            onClick={this.onClickButton}\n            type=\"button\"\n            className=\"search-icon-container\"\n          >\n            <BsSearch className=\"search-icon\" />\n          </button>\n        </div>\n        {renderContainer}\n      </div>\n    )\n  }\n}\nexport default AllJobs\n","import {Component} from 'react'\n\nimport Header from '../Header'\nimport Profile from '../Profile'\nimport FiltersGroup from '../FiltersGroup'\nimport AllJobs from '../AllJobs'\nimport './index.css'\n\nclass Job extends Component {\n  state = {selectedEmploymentType: [], selectedSalaryRange: ''}\n\n  updateEmploymentType = (employmentTypeId, isChecked) => {\n    this.setState(prev => ({\n      selectedEmploymentType: isChecked\n        ? [...prev.selectedEmploymentType, employmentTypeId]\n        : prev.selectedEmploymentType.filter(id => id !== employmentTypeId),\n    }))\n  }\n\n  updateSalaryRange = salaryRangeId => {\n    this.setState({selectedSalaryRange: salaryRangeId})\n  }\n\n  render() {\n    const {selectedEmploymentType, selectedSalaryRange} = this.state\n    const {employmentTypesList, salaryRangesList} = this.props\n    console.log(selectedEmploymentType, selectedSalaryRange)\n    return (\n      <div>\n        <Header />\n        <div className=\"job-bg-container\">\n          <div className=\"job-left-container\">\n            <Profile />\n            <hr className=\"hr-line\" />\n            <FiltersGroup\n              salaryRangesList={salaryRangesList}\n              employmentTypesList={employmentTypesList}\n              updateEmploymentType={this.updateEmploymentType}\n              updateSalaryRange={this.updateSalaryRange}\n            />\n          </div>\n          <div className=\"job-right-container\">\n            <AllJobs\n              selectedEmploymentType={selectedEmploymentType}\n              selectedSalaryRange={selectedSalaryRange}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Job\n","import './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n      alt=\"not found\"\n      className=\"not-found-img\"\n    />\n    <h1 className=\"not-found-heading\">Page Not Found</h1>\n    <p className=\"not-found-description\">\n      We are sorry, the page you requested could not be found\n    </p>\n  </div>\n)\n\nexport default NotFound\n","import {FaStar} from 'react-icons/fa'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsBriefcaseFill} from 'react-icons/bs'\n\nimport './index.css'\n\nconst SimilarJobs = props => {\n  const {similarjobDetails} = props\n  const {\n    companyLogoUrl,\n    employmentType,\n    jobDescription,\n    location,\n    rating,\n    title,\n  } = similarjobDetails\n  return (\n    <li className=\"similarJob-card\">\n      <div className=\"similarJob-title-container\">\n        <img\n          className=\"similarJob-logo\"\n          src={companyLogoUrl}\n          alt=\"similar job company logo\"\n        />\n        <div className=\"similarJob-title-rating-container\">\n          <h1 className=\"similarJob-title\">{title}</h1>\n          <div className=\"similarJob-rating-container\">\n            <FaStar className=\"star-icon\" />\n            <p className=\"similarJob-rating\">{rating}</p>\n          </div>\n        </div>\n      </div>\n      <h1 className=\"similarJob-decription-heading\">Description</h1>\n      <p className=\"similarJob-description\">{jobDescription}</p>\n      <div className=\"similarJob-location-details\">\n        <div className=\"similarJob-icon-container\">\n          <MdLocationOn className=\"similarJob-icon\" />\n          <p className=\"similarJob-icon-text\">{location}</p>\n        </div>\n        <div className=\"similarJob-icon-container\">\n          <BsBriefcaseFill className=\"similarJob-icon\" />\n          <p className=\"similarJob-icon-text\">{employmentType}</p>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default SimilarJobs\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {FaStar} from 'react-icons/fa'\nimport {MdLocationOn} from 'react-icons/md'\nimport {BsBriefcaseFill} from 'react-icons/bs'\nimport {RiShareBoxFill} from 'react-icons/ri'\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\nimport SimilarJobs from '../SimilarJobCard'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass JobDetails extends Component {\n  state = {\n    jobDetails: [],\n    similarJobs: [],\n    skills: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getJobDetails()\n  }\n\n  clickRetyButton = () => {\n    this.getJobDetails()\n  }\n\n  getJobDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n    const jwtToken = Cookies.get('jwt_token')\n    const url = `https://apis.ccbp.in/jobs/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const jobDetails = data.job_details\n      const updatedData = {\n        id: jobDetails.id,\n        companyLogoUrl: jobDetails.company_logo_url,\n        companyWebsiteUrl: jobDetails.company_website_url,\n        employmentType: jobDetails.employment_type,\n        jobDescription: jobDetails.job_description,\n        location: jobDetails.location,\n        packagePerAnnum: jobDetails.package_per_annum,\n        title: jobDetails.title,\n        rating: jobDetails.rating,\n        description: jobDetails.life_at_company.description,\n        imageUrl: jobDetails.life_at_company.image_url,\n      }\n      const similarJobsdata = data.similar_jobs\n      const updatedSimilarJobs = similarJobsdata.map(each => ({\n        id: each.id,\n        companyLogoUrl: each.company_logo_url,\n        employmentType: each.employment_type,\n        jobDescription: each.job_description,\n        location: each.location,\n        rating: each.rating,\n        title: each.title,\n      }))\n      const jobSkills = jobDetails.skills\n      const updatedSkills = jobSkills.map(each => ({\n        name: each.name,\n        imageUrl: each.image_url,\n      }))\n\n      this.setState({\n        jobDetails: updatedData,\n        similarJobs: updatedSimilarJobs,\n        skills: updatedSkills,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderSkillsContainer = skillProps => {\n    const {name, imageUrl} = skillProps\n    return (\n      <li key={name} className=\"skill-card\">\n        <img src={imageUrl} alt={name} className=\"skill-img\" />\n        <p className=\"skill-name\">{name}</p>\n      </li>\n    )\n  }\n\n  renderSuccessContainer = () => {\n    const {jobDetails, similarJobs, skills} = this.state\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      location,\n      packagePerAnnum,\n      title,\n      rating,\n      description,\n      imageUrl,\n    } = jobDetails\n    return (\n      <div>\n        <Header />\n        <div className=\"job-detials-container\">\n          <div className=\"job-details-topContainer\">\n            <div className=\"job-detials-title-container\">\n              <img\n                className=\"job-detials-logo\"\n                src={companyLogoUrl}\n                alt=\"job details company logo\"\n              />\n              <div className=\"job--details-title-rating-container\">\n                <h1 className=\"job-details-title\">{title}</h1>\n                <div className=\"job-details-rating-container\">\n                  <FaStar className=\"star-icon\" />\n                  <p className=\"job-details-rating\">{rating}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"job-details-short-bio-container\">\n              <div className=\"job-details-location-container\">\n                <div className=\"jobDetails-short-bio-icon-container\">\n                  <MdLocationOn className=\"job-details-icon\" />\n                  <p className=\"job-details-location\">{location}</p>\n                </div>\n                <div className=\"jobDetails-short-bio-icon-container\">\n                  <BsBriefcaseFill className=\"job-details-icon\" />\n                  <p className=\"job-details-employment-type\">\n                    {employmentType}\n                  </p>\n                </div>\n              </div>\n              <p className=\"job-details-pakage\">{packagePerAnnum}</p>\n            </div>\n            <hr className=\"job-card-hr-line\" />\n            <div>\n              <div className=\"description-heading-container\">\n                <h1 className=\"job-details-card-decription-heading\">\n                  Description\n                </h1>\n                <div className=\"hyper-link-container\">\n                  <a\n                    href={companyWebsiteUrl}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"hyper-link\"\n                  >\n                    <p>Visit</p>\n                    <RiShareBoxFill className=\"share-icon\" />\n                  </a>\n                </div>\n              </div>\n              <p className=\"job-details-card-decription\">{jobDescription}</p>\n            </div>\n            <h1 className=\"skills-heading\">Skills</h1>\n            <ul className=\"skill-list-container\">\n              {skills.map(each => this.renderSkillsContainer(each))}\n            </ul>\n            <div className=\"comapny-description-container\">\n              <div className=\"company-text-container\">\n                <h1 className=\"description-heading\">Life at Company</h1>\n                <p className=\"company-description\">{description}</p>\n              </div>\n              <img\n                className=\"company-img\"\n                src={imageUrl}\n                alt=\"life at company\"\n              />\n            </div>\n          </div>\n          <h1 className=\"similarjob-heading\">Similar Jobs</h1>\n          <ul className=\"similarJob-container-list\">\n            {similarJobs.map(each => (\n              <SimilarJobs key={each.id} similarjobDetails={each} />\n            ))}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n\n  renderLoadingContainer = () => (\n    <div className=\"jobDetails-loader-container\" data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureContainer = () => (\n    <div className=\"jobDetials-failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"jobDetails-failure-view-img\"\n      />\n      <h1 className=\"jobDetails-failure-heading\">Oops! Something Went Wrong</h1>\n      <p className=\"jobDetails-failure-description\">\n        We cannot seem to find the page you are looking for.\n      </p>\n      <button\n        type=\"button\"\n        className=\"retry-btn\"\n        onClick={this.clickRetyButton}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  render() {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSuccessContainer()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingContainer()\n      case apiStatusConstants.failure:\n        return this.renderFailureContainer()\n      default:\n        return null\n    }\n  }\n}\n\nexport default JobDetails\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookies.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Route, Switch, Redirect} from 'react-router-dom'\n\nimport './App.css'\n\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Job from './components/Job'\nimport NotFound from './components/NotFound'\nimport JobDetails from './components/JobDetails'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nconst salaryRangesList = [\n  {\n    salaryRangeId: '1000000',\n    label: '10 LPA and above',\n  },\n  {\n    salaryRangeId: '2000000',\n    label: '20 LPA and above',\n  },\n  {\n    salaryRangeId: '3000000',\n    label: '30 LPA and above',\n  },\n  {\n    salaryRangeId: '4000000',\n    label: '40 LPA and above',\n  },\n]\n\n// Replace your code here\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute\n      exact\n      path=\"/jobs\"\n      render={() => (\n        <Job\n          employmentTypesList={employmentTypesList}\n          salaryRangesList={salaryRangesList}\n        />\n      )}\n    />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobDetails} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}